seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
#instancias <- unlist(strsplit(output[[1]][7],split=","))
#qtdInstancias = length(instancias)
#print(qtdInstancias)
#image <- switch(output[[1]][9],
#            "-2.500" = {"full"},
#            "-0.800" = {"seahorse"},
#            "0.175"  = {"elephant"},
#             "-0.188" = {"triple_spiral"},
#            stop("Image unrecognized."))
# nthreads <- as.numeric(output[[1]][13])
# imsize <- as.numeric(output[[1]][14])
# time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
#
# results <- data.frame(
#   qtdInstancias = qtdInstancias, # Change manually according to GCP setup
#   image = image,
#   nthreads = nthreads,
#   imsize = imsize,
#   time_elapsed = time_elapsed
# )
}
results <- do.call("rbind", lapply(results, read_result))
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(output[[16]][1])
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
print(fulldata)
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(output[[16]][7])
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
print(fulldata)
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
print(fulldata)
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))/100
val_stddev = time_elapsed * per_stddev
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev
val_stddev = val_stddev
)
}
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
print(output)
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))/100
val_stddev = time_elapsed * per_stddev
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev,
val_stddev = val_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
print(fulldata)
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))/100
val_stddev = time_elapsed * per_stddev
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev,
val_stddev = val_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
write.csv(fulldata, file = "./results/results.csv")
fig1 <- ggplot(data = fulldata, aes(x = as.factor(qtdInstancias), y = time_elapsed, color = image)) +
geom_errorbar(aes(ymin=time_elapsed-val_stddev, ymax=time_elapsed+val_stddev), width=.1) +
geom_line() +
geom_point()+
ggtitle("Média do Tempo de Execução x Quantidade de Instâncias",
subtitle = "Média com Desvio Padrão") +
xlab("Quantidade de Instâncias") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Região Processada")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-10),
plot.margin = unit(c(1,1,1,1), "cm"))
pdf("resultado.pdf", width = 16, height = 9)
dev.off()
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))/100
val_stddev = time_elapsed * per_stddev
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev,
val_stddev = val_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
write.csv(fulldata, file = "./results/results.csv")
fig1 <- ggplot(data = fulldata, aes(x = as.factor(qtdInstancias), y = time_elapsed, color = image)) +
geom_errorbar(aes(ymin=time_elapsed-val_stddev, ymax=time_elapsed+val_stddev), width=.1) +
geom_line() +
geom_point()+
ggtitle("Média do Tempo de Execução x Quantidade de Instâncias",
subtitle = "Média com Desvio Padrão") +
xlab("Quantidade de Instâncias") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Região Processada")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-10),
plot.margin = unit(c(1,1,1,1), "cm"))
pdf("resultado.pdf", width = 16, height = 9)
print(fig1)
dev.off()
library("ggplot2")
full_uma_instancia = read.table("./results/uma_instancia/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_uma_instancia = read.table("./results/uma_instancia/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_uma_instancia = read.table("./results/uma_instancia/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_uma_instancia = read.table("./results/uma_instancia/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
full_duas_instancias = read.table("./results/duas_instancias/full.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
elephant_duas_instancias = read.table("./results/duas_instancias/elephant.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
seahorse_duas_instancias = read.table("./results/duas_instancias/seahorse.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
triplesp_duas_instancias = read.table("./results/duas_instancias/triplesp.log", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
fulldata = rbind(
full_uma_instancia,
elephant_uma_instancia,
seahorse_uma_instancia,
triplesp_uma_instancia,
full_duas_instancias,
elephant_duas_instancias,
seahorse_duas_instancias,
triplesp_duas_instancias
)
names(fulldata) <- "output_line"
results <- split(fulldata, f = rep(1:(nrow(fulldata)/16), each = 16))
print(results)
read_result <- function(df) {
output <- lapply(strsplit(df$output_line, "[ :]"), function(x) x[x != ""])
instancias <- unlist(strsplit(output[[1]][7],split=","))
qtdInstancias = length(instancias)
image <- switch(output[[1]][9],
"-2.500" = {"full"},
"-0.800" = {"seahorse"},
"0.175"  = {"elephant"},
"-0.188" = {"triple_spiral"},
stop("Image unrecognized."))
nthreads <- as.numeric(output[[1]][13])
imsize <- as.numeric(output[[1]][14])
time_elapsed <- as.numeric(gsub(",", "", output[[16]][1]))
per_stddev <- as.numeric(gsub("%", "",output[[16]][7]))/100
val_stddev = time_elapsed * per_stddev
results <- data.frame(
qtdInstancias = qtdInstancias, # Change manually according to GCP setup
image = image,
nthreads = nthreads,
imsize = imsize,
time_elapsed = time_elapsed,
per_stddev = per_stddev,
val_stddev = val_stddev
)
}
results <- do.call("rbind", lapply(results, read_result))
fulldata = rbind(
results
)
write.csv(fulldata, file = "./results/results.csv")
fig1 <- ggplot(data = fulldata, aes(x = as.factor(qtdInstancias), y = time_elapsed, color = image,group = image)) +
geom_errorbar(aes(ymin=time_elapsed-val_stddev, ymax=time_elapsed+val_stddev), width=.1) +
geom_line() +
geom_point()+
ggtitle("Média do Tempo de Execução x Quantidade de Instâncias",
subtitle = "Média com Desvio Padrão") +
xlab("Quantidade de Instâncias") +
ylab("Média do Tempo de execução (s)") +
guides(color = guide_legend(title="Região Processada")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-10),
plot.margin = unit(c(1,1,1,1), "cm"))
pdf("resultados.pdf", width = 16, height = 9)
print(fig1)
dev.off()
